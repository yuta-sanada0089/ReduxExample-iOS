//
// PostRepo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct PostRepo: Codable {

    /** True to create an initial commit with empty README. Default is false. */
    public var autoInit: Bool?
    public var _description: String?
    /** Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \&quot;Haskell\&quot; Ignored if auto_init parameter is not provided.  */
    public var gitignoreTemplate: String?
    /** True to enable downloads for this repository, false to disable them. Default is true. */
    public var hasDownloads: Bool?
    /** True to enable issues for this repository, false to disable them. Default is true. */
    public var hasIssues: Bool?
    /** True to enable the wiki for this repository, false to disable it. Default is true. */
    public var hasWiki: Bool?
    public var homepage: String?
    public var name: String?
    /** True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. */
    public var _private: Bool?
    /** The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization. */
    public var teamId: Int?

    public init(autoInit: Bool?, _description: String?, gitignoreTemplate: String?, hasDownloads: Bool?, hasIssues: Bool?, hasWiki: Bool?, homepage: String?, name: String?, _private: Bool?, teamId: Int?) {
        self.autoInit = autoInit
        self._description = _description
        self.gitignoreTemplate = gitignoreTemplate
        self.hasDownloads = hasDownloads
        self.hasIssues = hasIssues
        self.hasWiki = hasWiki
        self.homepage = homepage
        self.name = name
        self._private = _private
        self.teamId = teamId
    }

    public enum CodingKeys: String, CodingKey { 
        case autoInit = "auto_init"
        case _description = "description"
        case gitignoreTemplate = "gitignore_template"
        case hasDownloads = "has_downloads"
        case hasIssues = "has_issues"
        case hasWiki = "has_wiki"
        case homepage
        case name
        case _private = "private"
        case teamId = "team_id"
    }


}

